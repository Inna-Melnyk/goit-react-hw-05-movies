{"version":3,"file":"static/js/934.fdfb7677.chunk.js","mappings":"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","sources":["api/request.js","components/Error/ErrorMessages.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MovieDetail/MovieDetailedInfo.styled.jsx","components/MovieDetail/MovieDetailedInfo.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'a3efd2dd48cf6aca9d1b3d7226cefee9';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchMovies = async (detailedUrl, signal) => {\n  const response = await axios.get(detailedUrl, {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data;\n};\n\nexport const fetchMoviesbyTitle = async (query, signal) => {\n  const response = await axios.get('search/movie', {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query,\n    },\n  });\n  return response.data.results;\n};\n","export const ErrorMessages = ({ children }) => {\n  return (\n    <div>\n      {children}\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Spinner = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 15px;\n  color: orangered;\n\n  text-transform: capitalize;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    scale 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  svg {\n    animation: icon-spin 2s infinite linear;\n  }\n  @keyframes icon-spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(359deg);\n    }\n  }\n`;\n","import { ImSpinner } from 'react-icons/im';\nimport { Spinner } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <Spinner>\n      <ImSpinner size=\"32\" />\n      <p>Loading...</p>\n    </Spinner>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  padding: 0;\n  margin-bottom: 20px;\n\n  @media screen and (max-width: 458px) {\n    flex-direction: column;\n    \n  }\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 100%;\n  max-width: 300px;\n  height: auto;\n  max-height: 450px;\n  @media screen and (max-width: 458px) {\n    margin-bottom: 20px;\n  }\n`;\n\n\nexport const Info = styled.div`\n  padding-left: 36px;\n  margin: 0 0;\n`;\n\nexport const Title = styled.h2`\n  padding: 0;\n  margin: 0 0 20px;\n  font-size: 32px;\n`;\nexport const Text = styled.p`\n  padding: 0;\n  margin: 0 0 20px;\n  font-size: 16px;\n`;\n\nexport const Subtitle = styled.h3`\n  padding: 0;\n  margin: 0 0 16px;\n  font-size: 20px;\n`;\nexport const BackLink = styled(Link)`\n  display: inline-flex;\n  gap: 8px;\n  padding: 8px 16px;\n  margin: 20px 0px;\n  border-radius: 4px;\n  text-decoration: none;\n  font-weight: 500;\n  color: black;\n\n  background-color: orangered;\n  transition: color 250ms cubic-bezier(0.65, 0.05, 0.36, 1),\n  transform 250ms cubic-bezier(0.65, 0.05, 0.36, 1);\n\n  &:hover {\n    color: white;\n    transform: scale(1.02);\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { TfiControlBackward } from 'react-icons/tfi';\nimport {\n  Wrapper,\n  Info,\n  Title,\n  Text,\n  Subtitle,\n  BackLink,\n  Image\n} from './MovieDetailedInfo.styled';\nimport { useRef } from 'react';\n\nexport const MovieDetailedInfo = ({ movieInfo }) => {\n  const location = useLocation();\n  const backLinkLocation = useRef(location.state?.from ?? '/');\n\n  const genre = movieInfo.genres;\n  const genres = genre.map(item => item.name).join(', ');\n\n  return (\n    <>\n      <BackLink to={backLinkLocation.current}>\n        <TfiControlBackward size=\"18\" />\n        <span>Back</span>\n      </BackLink>\n\n      <Wrapper>\n        {movieInfo.poster_path ? (\n          <Image\n            src={`https://image.tmdb.org/t/p/w500${movieInfo.poster_path}`}\n            alt={movieInfo.title || movieInfo.name}\n            width=\"300\"\n          />\n        ) : (\n          <Image\n            src=\"https://cringemdb.com/img/movie-poster-placeholder.png\"\n            alt=\"placeholder\"\n            width=\"300\"\n          />\n        )}\n\n        <Info>\n          <Title>{movieInfo.title || movieInfo.name}</Title>\n          <Text>User score {Math.floor(movieInfo.vote_average * 10)}%</Text>\n          <Subtitle>Overview</Subtitle>\n          <Text>{movieInfo.overview}</Text>\n          <Subtitle>Genres</Subtitle>\n          <Text>{genres}</Text>\n        </Info>\n      </Wrapper>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\nimport {Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  padding: 0;\n  margin: 0;\n  padding-bottom: 20px;\n  gap: 16px;\n  border-bottom: 1px solid black; \n  \n  @media screen and (max-width: 458px) {\n    display: flex;\n    flex-direction: column;\n    gap: 12px;\n  }\n`;\nexport const Item = styled.li`\n  min-width: 200px;\n  text-align: center;\n`;\n\n\nexport const InfoLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n\n  text-decoration: none;\n  min-width: 200px;\n  color: black;\n  font-weight: 500;\n  padding: 13px;\n  background-color: #ebbfaf;\n  border-radius: 8px;\n  transition: color 250ms cubic-bezier(0.65, 0.05, 0.36, 1),\n    transform 250ms cubic-bezier(0.65, 0.05, 0.36, 1);\n\n  &:hover {\n    color: orangered;\n    transform: scale(1.02);\n  }\n`;","import { useEffect, useState, useRef } from 'react';\nimport { useParams, Outlet } from 'react-router-dom';\nimport { MdOutlineRateReview } from 'react-icons/md';\nimport { IoIosPeople } from 'react-icons/io';\nimport { fetchMovies } from 'api/request';\nimport { MovieDetailedInfo } from 'components/MovieDetail/MovieDetailedInfo';\nimport { Loader } from 'components/Loader/Loader';\nimport { ErrorMessages } from 'components/Error/ErrorMessages';\nimport { InfoLink, Item, List } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  const abortCtrl = useRef();\n\n  const detailsSearchUrl = `movie/${movieId}`;\n\n  useEffect(() => {\n    const getDetailsMovies = async () => {\n      if (abortCtrl.current) {\n        abortCtrl.current.abort();\n      }\n\n      abortCtrl.current = new AbortController();\n\n      try {\n        setIsLoading(true);\n        setError(null);\n\n        const movieData = await fetchMovies(\n          detailsSearchUrl,\n          abortCtrl.current.signal\n        );\n        setMovie(movieData);\n        setError(null);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError(error.message);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getDetailsMovies();\n  }, [detailsSearchUrl]);\n\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {error && <ErrorMessages>{error}</ErrorMessages>}\n      {movie !== null && <MovieDetailedInfo movieInfo={movie} />}\n      <List>\n        <Item>\n          <InfoLink to=\"cast\">\n            <IoIosPeople size=\"18\" />\n            <span> Read about the cast</span>\n          </InfoLink>\n        </Item>\n        <Item>\n          <InfoLink to=\"reviews\">\n            <MdOutlineRateReview size=\"18\" />\n            <span>Go through the reviews</span>\n          </InfoLink>\n        </Item>\n      </List>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","axios","fetchMovies","detailedUrl","signal","params","api_key","language","response","data","fetchMoviesbyTitle","query","results","ErrorMessages","children","Spinner","styled","Loader","size","Wrapper","Image","Info","Title","Text","Subtitle","BackLink","Link","MovieDetailedInfo","movieInfo","location","useLocation","backLinkLocation","useRef","state","from","genres","map","item","name","join","to","current","poster_path","src","alt","title","width","Math","floor","vote_average","overview","List","Item","InfoLink","useState","movie","setMovie","isLoading","setIsLoading","error","setError","movieId","useParams","abortCtrl","detailsSearchUrl","useEffect","getDetailsMovies","abort","AbortController","movieData","code","message"],"sourceRoot":""}